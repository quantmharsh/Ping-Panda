// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Plan {
  FREE
  PRO
}

model User {
  id              String          @id @default(cuid())
  externalId      String?         @unique
  quotaLimit      Int
  plan            Plan            @default(FREE)
  email           String          @unique
  apikey          String          @unique @default(cuid())
  discordId       String?
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  //creating relation 1:N
  eventCategories EventCategory[]
  events          Event[]
  quota           Quota[]

  @@index([email, apikey])
}

model EventCategory {
  id        String   @id @default(cuid())
  name      String
  color     Int
  emoji     String?
  //creating relation to user N:1 
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  events    Event[]

  // one user can have only 1 event with given name . No multiple events with same name
  @@unique([userId, name])
}

enum DeliveryStatus {
  PENDING
  DELIVERED
  FAILED
}

model Event {
  id               String @id @default(cuid())
  formattedMessage String

  user            User           @relation(fields: [userId], references: [id])
  userId          String
  name            String
  fields          Json
  deliveryStatus  DeliveryStatus @default(PENDING)
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  EventCategory   EventCategory? @relation(fields: [eventCategoryId], references: [id])
  eventCategoryId String?

  @@index([createdAt])
}

model Quota {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  year      Int
  month     Int
  count     Int      @default(0)
  updatedAt DateTime @updatedAt
}
